include "std.hoc";
include "str.hoc";
include "math.hoc";
include "fibo.hoc";
include "fizzbuzz.hoc";
include "sort.hoc";
/*
*/

/*
proc void test()
{
  var float f1 = -12.0;
  var float f2 = 0.058;
  var float result = f1 + f2;
  print_float(f1);
  print_str(&" + ");
  print_float(f2);
  print_str(&" = ");
  print_float(result);
  print_str(&"\n---------\n");

  var int i_a = 7*7*5*3;
  var int i_b = 7*3*11;
  var int i_r = gcd(i_a, i_b);
  print_str(&"gcd(");
  print_int(i_a);
  print_str(&",");
  print_int(i_b);
  print_str(&")=");
  print_int(i_r);

  print_str(&"\n--- FIBONACCI ---\n");
  fibo(40);

  print_str(&"\n--- FIZZBUZZ ---\n");
  fizzbuzz(50);
}
*/

/* FIXME
var [4]void data;
*/

/*
proc void printf(char* s, ...)
{
}
*/

/*
proc int strlen(char* str)
{
  var int len = 0;
  while(*str != '\0')
  {
    str = str + (type char*)1;
    len = len + 1;
  }
  return len;
}
*/

proc int foo(int a)
{
  return 2*a;
}

var int len;
proc void main()
{
  var char* cmd = GetCommandLine();
  len = strlen(cmd);
}

asm
{
GetStdHandle PROTO NEAR32 stdcall, std_handle:DWORD
GetCommandLineA PROTO NEAR32 stdcall
}

proc char* GetCommandLine()
{
  asm
  {
INVOKE GetCommandLineA
push ebp
add dword ptr [esp], 12
pop edi
mov [edi], eax
  }
}

main();

