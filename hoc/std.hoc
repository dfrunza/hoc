extern proc char* GetCommandLineA();
extern proc void* VirtualAlloc(void* address, int alloc_size, int alloc_type, int protect_flags);
extern proc void WriteConsoleA(int console_handle, char* buf, int chars_to_write_count, int* chars_written_count, void* reserved);
extern proc int GetStdHandle(int device_id);

var int stdout_handle = GetStdHandle(-11); /*STD_OUTPUT_HANDLE*/
var void* heap = VirtualAlloc((type void*)0, 4096, 12288/*MEM_COMMIT|MEM_RESERVE*/, 4/*PAGE_READWRITE*/);
var int heap_ptr = 0;

proc void* new(int size)
{
  var void* mem = heap + (type void*)heap_ptr;
  heap_ptr = heap_ptr + size;
  return mem;
}

main();

